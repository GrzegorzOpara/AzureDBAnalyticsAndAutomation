{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sqlServerName": {
          "type": "string"
        },
        "administratorLogin": {
          "type": "string"
        },
        "administratorPassword": {
          "type": "securestring"
        },
        "sqlPoolName": {
          "type": "string"
        },
        "sqlDbName": {
          "type": "string"
        },
        "workspaceName": {
        "type": "string",
        "defaultValue": "SqlAnalyticsWorkspace"
        },
        "location": {
          "type": "string",
          "defaultValue": "[resourceGroup().location]"
        },
        "logsRetentionDays": {
          "type": "int",
          "defaultValue": 7
        },
        "storageAccountKey": {
          "type": "string",
          "metadata": {
            "description": "Specifies the key of the storage account where the BACPAC file is stored."
          }
        },
        "bacpacUrl": {
          "type": "string",
          "metadata": {
            "description": "Specifies the URL of the BACPAC file."
          }
    }
    },
    "variables": {

    },
    "resources": [
      {
        "name": "[concat(parameters('sqlServerName'), '/', parameters('sqlDbName'))]",
        "apiVersion": "2017-10-01-preview",
        "type": "Microsoft.Sql/servers/databases",
        "location": "[parameters('location')]",
        "properties": {
          "elasticPoolId": "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('sqlServerName'), parameters('sqlPoolName'))]"
          },
        "resources":[
          {
          "type": "extensions",
          "apiVersion": "2014-04-01",
          "name": "Import",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqlDbName'))]"
          ],
          "properties": {
            "storageKeyType": "StorageAccessKey",
            "storageKey": "[parameters('storageAccountKey')]",
            "storageUri": "[parameters('bacpacUrl')]",
            "administratorLogin": "[parameters('administratorLogin')]",
            "administratorLoginPassword": "[parameters('administratorPassword')]",
            "operationMode": "Import"
          }
        }
        ]
      },
      {
        "type": "Microsoft.Sql/servers/databases/providers/diagnosticSettings",
        "name": "[concat(parameters('sqlServerName'),'/', parameters('sqlDbName'),'/Microsoft.Insights/SQLLogAnalyticsIntegration')]",
        "apiVersion": "2017-05-01-preview",
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('sqlDbName'))]"
        ],
        "properties": {
          "name": "SQLLogAnalyticsIntegration",
			    "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]",
          "logs": [
            {
              "category": "Blocks",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
            {
              "category": "QueryStoreWaitStatistics",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
            {
              "category": "Errors",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
            {
              "category": "QueryStoreRuntimeStatistics",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
            {
              "category": "DatabaseWaitStatistics",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
            {
              "category": "Timeouts",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
            {
              "category": "SQLInsights",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
            {
              "category": "Audit",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
            {
              "category": "SQLSecurityAuditEvents",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
            {
              "category": "AutomaticTuning",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            },
                        {
              "category": "Deadlocks",
              "enabled": true,
              "retentionPolicy": {
                "days": "[parameters('logsRetentionDays')]",
                "enabled": true
              }
            }
          ],
        "metrics": [
        {
          "category": "AllMetrics",
          "enabled": true,
          "retentionPolicy": {
            "enabled": true,
            "days": "[parameters('logsRetentionDays')]"
          }
        }
        ]
      }
    }
    ],
    "outputs": {}
  }
  